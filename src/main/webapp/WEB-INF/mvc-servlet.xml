<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans" xmlns:ctx="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd ">
	
	<!-- 注意要配置ctx 和 mvc 的命名空间 -->
	<!-- 是对包进行扫描，实现注释驱动Bean定义，同时将bean自动注入容器中使用。即解决了@Controller标识的类的bean的注入和使用。 -->
	<ctx:annotation-config />
	<!-- 扫描需要注入的包 -->
	<ctx:component-scan base-package="com.yvdedu.guan.controller"/>
	<!-- 相当于注册了DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter两个bean，配置一些messageconverter。即解决了@Controller注解的使用前提配置 -->
	<mvc:annotation-driven/>
	<!-- 当有请求时候都没有匹配的处理请求类，就都去<mvc:default-servlet-handler/>即default servlet处理了 -->
	<mvc:default-servlet-handler/>
	<!-- 如果当前路径是index 则交给相应的视图解析器直接解析为视图如
	<mvc:view-controller path="index" view-name="manager/index"/>
	                  如果是index就重定向到/admin/index
	 -->
	<mvc:view-controller path="/index/a" view-name="redirect:www.baidu.com"/>
	 
	 <!-- 访问静态资源文件    jsp文件若放在静态路径/images下，可以直接访问，而不经过controller  -->  
    <mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/>
	 
	<!-- 配置自动生成别名 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/manager/"/>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 配置拦截器            mvc:mapping 拦截器路径配置        mvc:exclude-mapping 拦截器不需要拦截的路径-->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<!-- 
			<mvc:exclude-mapping path="/static/**" />
			 -->
			<bean class="com.yvdedu.guan.filter.MyFilter"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 配置 ajax返回的 异常处理类
	<bean class="com.yvdedu.springMvc.entity.MyExceptionHandel">
		<property name="order" value="0"/>
	</bean>
	-->
	
	<!-- 配置文件上传-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10000000000"></property>
	</bean>
	
	
</beans>