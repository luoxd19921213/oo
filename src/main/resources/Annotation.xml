<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans" xmlns:ctx="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">
	<ctx:annotation-config /><!-- 打开注解配置 -->
	<!-- 配置需要扫描的包 -->
	<ctx:component-scan base-package="com.yvdedu.guan" />

	<!-- 配置数据库数据圆 -->
	<bean id="dataSource" class="com.mysql.jdbc.jdbc2.optional.MysqlDataSource">
		<property name="url" value="jdbc:mysql://mysql:3306/test?characterEncoding\=utf-8" />
		<property name="user" value="root"/>
		<property name="password" value="root"/>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 配置实体映射  	-->
		<property name="typeAliasesPackage" value="com.yvdedu.guan.entity" />
		<property name="mapperLocations" value="classpath*:com/yvdedu/guan/mapper/*.xml" />
		<!-- 配置懒加载 -->
		<property name="configurationProperties">
			<value>
				lazyLoadingEnabled=true
				aggressiveLazyLoading=false
			</value>
		</property>
		<!-- 配置插件 -->
		<property name="plugins">
			<array>
	            <bean class="com.yvdedu.guan.tool.MyPlugin">
	            </bean>
        	</array>
		</property>
	</bean>
	
	<!-- 配置数据库的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.yvdedu.guan.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>  
	</bean>

	<!-- 配置切面编程(主要用来配置事物)   需要配置aop命名空间-->
	<!-- <aop:aspectj-autoproxy /> 这个是在aop类中来设置切入也就自动扫描需要在aop类中加注解   @Transactional  指定异常回滚@Transactional(rollbackFor={SQLException.class,RuntimeException.class})-->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.yvdedu.guan.service.*.*(..))"/>
	</aop:config>
	<!-- 配置具体的事物 -->
	<tx:advice id="txAdvice">
		<tx:attributes>
			<!-- 配置只读的方法不经过事物 -->
			<tx:method read-only="true" name="get*"/>
			<tx:method read-only="true" name="query*"/>
			<!-- 其他所有方法都在事物中 -->
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	<!-- 添加管理事物 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>